

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 27 12:20:35 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.32
    21                           ; Generated 02/02/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4580 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _RCSTAbits	set	4011
    56  0000                     _SPBRG	set	4015
    57  0000                     _TRISC	set	3988
    58  0000                     _TXREG	set	4013
    59  0000                     _TXSTAbits	set	4012
    60  0000                     _PIR1bits	set	3998
    61                           
    62                           	psect	smallconst
    63  000600                     __psmallconst:
    64                           	callstack 0
    65  000600  00                 	db	0
    66  000601                     STR_1:
    67  000601  48                 	db	72	;'H'
    68  000602  65                 	db	101	;'e'
    69  000603  6C                 	db	108	;'l'
    70  000604  6C                 	db	108	;'l'
    71  000605  6F                 	db	111	;'o'
    72  000606  20                 	db	32
    73  000607  57                 	db	87	;'W'
    74  000608  6F                 	db	111	;'o'
    75  000609  72                 	db	114	;'r'
    76  00060A  6C                 	db	108	;'l'
    77  00060B  64                 	db	100	;'d'
    78  00060C  0D                 	db	13
    79  00060D  0A                 	db	10
    80  00060E  20                 	db	32
    81  00060F  00                 	db	0
    82  000610  00                 	db	0	; dummy byte at the end
    83  0000                     
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87  0007F0                     __pcinit:
    88                           	callstack 0
    89  0007F0                     start_initialization:
    90                           	callstack 0
    91  0007F0                     __initialization:
    92                           	callstack 0
    93  0007F0                     end_of_initialization:
    94                           	callstack 0
    95  0007F0                     __end_of__initialization:
    96                           	callstack 0
    97  0007F0  0E00               	movlw	low (__Lsmallconst shr (0+16))
    98  0007F2  6EF8               	movwf	tblptru,c
    99  0007F4  0E06               	movlw	high __Lsmallconst
   100  0007F6  6EF7               	movwf	tblptrh,c
   101  0007F8  0100               	movlb	0
   102  0007FA  EF5B  F003         	goto	_main	;jump to C main() function
   103                           
   104                           	psect	cstackCOMRAM
   105  000001                     __pcstackCOMRAM:
   106                           	callstack 0
   107  000001                     ?___lldiv:
   108                           	callstack 0
   109  000001                     UART_Config_TXSTA@config:
   110                           	callstack 0
   111  000001                     UART_Config_RCSTA@config:
   112                           	callstack 0
   113  000001                     UART_TransmitString@data:
   114                           	callstack 0
   115  000001                     ___lldiv@dividend:
   116                           	callstack 0
   117                           
   118                           ; 4 bytes @ 0x0
   119  000001                     	ds	2
   120  000003                     
   121                           ; 1 bytes @ 0x2
   122  000003                     	ds	2
   123  000005                     ___lldiv@divisor:
   124                           	callstack 0
   125                           
   126                           ; 4 bytes @ 0x4
   127  000005                     	ds	4
   128  000009                     ___lldiv@quotient:
   129                           	callstack 0
   130                           
   131                           ; 4 bytes @ 0x8
   132  000009                     	ds	4
   133  00000D                     ___lldiv@counter:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0xC
   137  00000D                     	ds	1
   138  00000E                     UART_Init@config:
   139                           	callstack 0
   140                           
   141                           ; 4 bytes @ 0xD
   142  00000E                     	ds	4
   143  000012                     ??_UART_Init:
   144                           
   145                           ; 1 bytes @ 0x11
   146  000012                     	ds	2
   147  000014                     ??_main:
   148                           
   149                           ; 1 bytes @ 0x13
   150  000014                     	ds	2
   151  000016                     main@rxConfig:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x15
   155  000016                     	ds	1
   156  000017                     main@txConfig:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x16
   160  000017                     	ds	1
   161  000018                     main@uartConfig:
   162                           	callstack 0
   163                           
   164                           ; 4 bytes @ 0x17
   165  000018                     	ds	4
   166                           
   167 ;;
   168 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   169 ;;
   170 ;; *************** function _main *****************
   171 ;; Defined at:
   172 ;;		line 27 in file "uartStructMain.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;  uartConfig      4   23[COMRAM] struct .
   177 ;;  txConfig        1   22[COMRAM] struct .
   178 ;;  rxConfig        1   21[COMRAM] struct .
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   188 ;;      Params:         0       0       0       0       0       0       0
   189 ;;      Locals:         6       0       0       0       0       0       0
   190 ;;      Temps:          2       0       0       0       0       0       0
   191 ;;      Totals:         8       0       0       0       0       0       0
   192 ;;Total ram usage:        8 bytes
   193 ;; Hardware stack levels required when called: 2
   194 ;; This function calls:
   195 ;;		_UART_Config_RCSTA
   196 ;;		_UART_Config_TXSTA
   197 ;;		_UART_Init
   198 ;;		_UART_TransmitString
   199 ;;		_UART_WaitForTxComplete
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206  0006B6                     __ptext0:
   207                           	callstack 0
   208  0006B6                     _main:
   209                           	callstack 29
   210  0006B6                     
   211                           ;uartStructMain.c: 28:      TRISC=0X00;
   212  0006B6  0E00               	movlw	0
   213  0006B8  6E94               	movwf	148,c	;volatile
   214  0006BA                     
   215                           ;uartStructMain.c: 29:     TXSTA_Config txConfig;;uartStructMain.c: 30:     txConfig.txE
      +                          nable = 1;
   216  0006BA  8017               	bsf	main@txConfig^0,0,c
   217  0006BC                     
   218                           ;uartStructMain.c: 31:     txConfig.syncMode = 0;
   219  0006BC  9217               	bcf	main@txConfig^0,1,c
   220  0006BE                     
   221                           ;uartStructMain.c: 32:     txConfig.highSpeed = 1;
   222  0006BE  8417               	bsf	main@txConfig^0,2,c
   223  0006C0                     
   224                           ;uartStructMain.c: 34:     RCSTA_Config rxConfig;;uartStructMain.c: 35:     rxConfig.Ser
      +                          ialPortEnable = 1;
   225  0006C0  8016               	bsf	main@rxConfig^0,0,c
   226  0006C2                     
   227                           ;uartStructMain.c: 36:     rxConfig.continiousReciveEnable = 1;
   228  0006C2  8216               	bsf	main@rxConfig^0,1,c
   229  0006C4                     
   230                           ;uartStructMain.c: 39:     UART_Config_TXSTA(txConfig);
   231  0006C4  5017               	movf	main@txConfig^0,w,c
   232  0006C6  ECD3  F003         	call	_UART_Config_TXSTA
   233  0006CA                     
   234                           ;uartStructMain.c: 40:     UART_Config_RCSTA(rxConfig);
   235  0006CA  5016               	movf	main@rxConfig^0,w,c
   236  0006CC  ECE4  F003         	call	_UART_Config_RCSTA
   237                           
   238                           ;uartStructMain.c: 43:     UART_Config uartConfig;;uartStructMain.c: 44:     uartConfig.
      +                          baud_rate = 9600UL;
   239  0006D0  0E25               	movlw	37
   240  0006D2  6E19               	movwf	(main@uartConfig+1)^0,c
   241  0006D4  0E80               	movlw	128
   242  0006D6  6E18               	movwf	main@uartConfig^0,c
   243                           
   244                           ;uartStructMain.c: 45:     uartConfig.data_bits = 8;
   245  0006D8  0E08               	movlw	8
   246  0006DA  6E1A               	movwf	(main@uartConfig+2)^0,c
   247                           
   248                           ;uartStructMain.c: 46:     uartConfig.stop_bits = 1;
   249  0006DC  0E01               	movlw	1
   250  0006DE  6E1B               	movwf	(main@uartConfig+3)^0,c
   251  0006E0                     
   252                           ;uartStructMain.c: 49:     UART_Init(uartConfig);
   253  0006E0  C018  F00E         	movff	main@uartConfig,UART_Init@config
   254  0006E4  C019  F00F         	movff	main@uartConfig+1,UART_Init@config+1
   255  0006E8  C01A  F010         	movff	main@uartConfig+2,UART_Init@config+2
   256  0006EC  C01B  F011         	movff	main@uartConfig+3,UART_Init@config+3
   257  0006F0  ECB3  F003         	call	_UART_Init	;wreg free
   258  0006F4                     l842:
   259                           
   260                           ;uartStructMain.c: 54:         UART_WaitForTxComplete();
   261  0006F4  ECF0  F003         	call	_UART_WaitForTxComplete	;wreg free
   262  0006F8                     
   263                           ;uartStructMain.c: 58:         UART_TransmitString("Hello World\r\n ");
   264  0006F8  0E01               	movlw	low STR_1
   265  0006FA  6E01               	movwf	UART_TransmitString@data^0,c
   266  0006FC  0E06               	movlw	high STR_1
   267  0006FE  6E02               	movwf	(UART_TransmitString@data+1)^0,c
   268  000700  EC92  F003         	call	_UART_TransmitString	;wreg free
   269  000704                     
   270                           ;uartStructMain.c: 60:         _delay((unsigned long)((1000)*(20000000UL/4000.0)));
   271  000704  0E1A               	movlw	26
   272  000706  6E15               	movwf	(??_main+1)^0,c
   273  000708  0E5E               	movlw	94
   274  00070A  6E14               	movwf	??_main^0,c
   275  00070C  0E6E               	movlw	110
   276  00070E                     u177:
   277  00070E  2EE8               	decfsz	wreg,f,c
   278  000710  D7FE               	bra	u177
   279  000712  2E14               	decfsz	??_main^0,f,c
   280  000714  D7FC               	bra	u177
   281  000716  2E15               	decfsz	(??_main+1)^0,f,c
   282  000718  D7FA               	bra	u177
   283  00071A  D000               	nop2	
   284  00071C  EF7A  F003         	goto	l842
   285  000720  EF00  F000         	goto	start
   286  000724                     __end_of_main:
   287                           	callstack 0
   288                           
   289 ;; *************** function _UART_WaitForTxComplete *****************
   290 ;; Defined at:
   291 ;;		line 11 in file "uartStructMain.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		None
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   305 ;;      Params:         0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used: 1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  0007E0                     __ptext1:
   320                           	callstack 0
   321  0007E0                     _UART_WaitForTxComplete:
   322                           	callstack 30
   323  0007E0                     l19:
   324                           
   325                           ;uartStructMain.c: 12:     while (!PIR1bits.TXIF) {
   326  0007E0  A89E               	btfss	158,4,c	;volatile
   327  0007E2  EFF5  F003         	goto	u41
   328  0007E6  EFF7  F003         	goto	u40
   329  0007EA                     u41:
   330  0007EA  EFF0  F003         	goto	l19
   331  0007EE                     u40:
   332  0007EE  0012               	return		;funcret
   333  0007F0                     __end_of_UART_WaitForTxComplete:
   334                           	callstack 0
   335                           
   336 ;; *************** function _UART_TransmitString *****************
   337 ;; Defined at:
   338 ;;		line 17 in file "uartStructMain.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;  data            2    0[COMRAM] PTR const unsigned char 
   341 ;;		 -> STR_1(15), 
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   353 ;;      Params:         2       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0
   356 ;;      Totals:         2       0       0       0       0       0       0
   357 ;;Total ram usage:        2 bytes
   358 ;; Hardware stack levels used: 1
   359 ;; This function calls:
   360 ;;		Nothing
   361 ;; This function is called by:
   362 ;;		_main
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text2
   367  000724                     __ptext2:
   368                           	callstack 0
   369  000724                     _UART_TransmitString:
   370                           	callstack 30
   371  000724                     
   372                           ;uartStructMain.c: 18:     while (*data != '\0') {
   373  000724  EFA4  F003         	goto	l820
   374  000728                     l27:
   375                           
   376                           ;uartStructMain.c: 20:         while (!TXSTAbits.TRMT) {
   377  000728  A2AC               	btfss	172,1,c	;volatile
   378  00072A  EF99  F003         	goto	u151
   379  00072E  EF9B  F003         	goto	u150
   380  000732                     u151:
   381  000732  EF94  F003         	goto	l27
   382  000736                     u150:
   383  000736                     
   384                           ;uartStructMain.c: 23:         TXREG = *data;
   385  000736  C001  FFF6         	movff	UART_TransmitString@data,tblptrl
   386  00073A  C002  FFF7         	movff	UART_TransmitString@data+1,tblptrh
   387  00073E                     	if	0	;tblptru may be non-zero
   388  00073E                     	endif
   389  00073E                     	if	0	;tblptru may be non-zero
   390  00073E                     	endif
   391  00073E  0008               	tblrd		*
   392  000740  CFF5 FFAD          	movff	tablat,4013	;volatile
   393  000744                     
   394                           ;uartStructMain.c: 24:         data++;
   395  000744  4A01               	infsnz	UART_TransmitString@data^0,f,c
   396  000746  2A02               	incf	(UART_TransmitString@data+1)^0,f,c
   397  000748                     l820:
   398                           
   399                           ;uartStructMain.c: 18:     while (*data != '\0') {
   400  000748  C001  FFF6         	movff	UART_TransmitString@data,tblptrl
   401  00074C  C002  FFF7         	movff	UART_TransmitString@data+1,tblptrh
   402  000750                     	if	0	;tblptru may be non-zero
   403  000750                     	endif
   404  000750                     	if	0	;tblptru may be non-zero
   405  000750                     	endif
   406  000750  0008               	tblrd		*
   407  000752  50F5               	movf	tablat,w,c
   408  000754  0900               	iorlw	0
   409  000756  A4D8               	btfss	status,2,c
   410  000758  EFB0  F003         	goto	u161
   411  00075C  EFB2  F003         	goto	u160
   412  000760                     u161:
   413  000760  EF94  F003         	goto	l27
   414  000764                     u160:
   415  000764  0012               	return		;funcret
   416  000766                     __end_of_UART_TransmitString:
   417                           	callstack 0
   418                           
   419 ;; *************** function _UART_Init *****************
   420 ;; Defined at:
   421 ;;		line 5 in file "uart.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  config          4   13[COMRAM] struct .
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   435 ;;      Params:         4       0       0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0       0       0
   437 ;;      Temps:          2       0       0       0       0       0       0
   438 ;;      Totals:         6       0       0       0       0       0       0
   439 ;;Total ram usage:        6 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 1
   442 ;; This function calls:
   443 ;;		___lldiv
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text3
   450  000766                     __ptext3:
   451                           	callstack 0
   452  000766                     _UART_Init:
   453                           	callstack 29
   454  000766                     
   455                           ;uart.c: 7:     SPBRG = (20000000UL/(16* config.baud_rate)-1);
   456  000766  0E00               	movlw	0
   457  000768  6E01               	movwf	___lldiv@dividend^0,c
   458  00076A  0E2D               	movlw	45
   459  00076C  6E02               	movwf	(___lldiv@dividend+1)^0,c
   460  00076E  0E31               	movlw	49
   461  000770  6E03               	movwf	(___lldiv@dividend+2)^0,c
   462  000772  0E01               	movlw	1
   463  000774  6E04               	movwf	(___lldiv@dividend+3)^0,c
   464  000776  C00E  F012         	movff	UART_Init@config,??_UART_Init
   465  00077A  C00F  F013         	movff	UART_Init@config+1,??_UART_Init+1
   466  00077E  3A12               	swapf	??_UART_Init^0,f,c
   467  000780  3A13               	swapf	(??_UART_Init+1)^0,f,c
   468  000782  0EF0               	movlw	240
   469  000784  1613               	andwf	(??_UART_Init+1)^0,f,c
   470  000786  5012               	movf	??_UART_Init^0,w,c
   471  000788  0B0F               	andlw	15
   472  00078A  1213               	iorwf	(??_UART_Init+1)^0,f,c
   473  00078C  0EF0               	movlw	240
   474  00078E  1612               	andwf	??_UART_Init^0,f,c
   475  000790  C012  F005         	movff	??_UART_Init,___lldiv@divisor
   476  000794  C013  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
   477  000798  6A07               	clrf	(___lldiv@divisor+2)^0,c
   478  00079A  6A08               	clrf	(___lldiv@divisor+3)^0,c
   479  00079C  EC09  F003         	call	___lldiv	;wreg free
   480  0007A0  0401               	decf	?___lldiv^0,w,c
   481  0007A2  6EAF               	movwf	175,c	;volatile
   482  0007A4  0012               	return		;funcret
   483  0007A6                     __end_of_UART_Init:
   484                           	callstack 0
   485                           
   486 ;; *************** function ___lldiv *****************
   487 ;; Defined at:
   488 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  dividend        4    0[COMRAM] unsigned long 
   491 ;;  divisor         4    4[COMRAM] unsigned long 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  quotient        4    8[COMRAM] unsigned long 
   494 ;;  counter         1   12[COMRAM] unsigned char 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  4    0[COMRAM] unsigned long 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         8       0       0       0       0       0       0
   505 ;;      Locals:         5       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0
   507 ;;      Totals:        13       0       0       0       0       0       0
   508 ;;Total ram usage:       13 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_UART_Init
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text4
   518  000612                     __ptext4:
   519                           	callstack 0
   520  000612                     ___lldiv:
   521                           	callstack 29
   522  000612  0E00               	movlw	0
   523  000614  6E09               	movwf	___lldiv@quotient^0,c
   524  000616  0E00               	movlw	0
   525  000618  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   526  00061A  0E00               	movlw	0
   527  00061C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   528  00061E  0E00               	movlw	0
   529  000620  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   530  000622  5005               	movf	___lldiv@divisor^0,w,c
   531  000624  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   532  000626  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   533  000628  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   534  00062A  B4D8               	btfsc	status,2,c
   535  00062C  EF1A  F003         	goto	u121
   536  000630  EF1C  F003         	goto	u120
   537  000634                     u121:
   538  000634  EF52  F003         	goto	l84
   539  000638                     u120:
   540  000638  0E01               	movlw	1
   541  00063A  6E0D               	movwf	___lldiv@counter^0,c
   542  00063C  EF26  F003         	goto	l800
   543  000640                     l798:
   544  000640  90D8               	bcf	status,0,c
   545  000642  3605               	rlcf	___lldiv@divisor^0,f,c
   546  000644  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   547  000646  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   548  000648  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   549  00064A  2A0D               	incf	___lldiv@counter^0,f,c
   550  00064C                     l800:
   551  00064C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   552  00064E  EF2B  F003         	goto	u131
   553  000652  EF2D  F003         	goto	u130
   554  000656                     u131:
   555  000656  EF20  F003         	goto	l798
   556  00065A                     u130:
   557  00065A                     l802:
   558  00065A  90D8               	bcf	status,0,c
   559  00065C  3609               	rlcf	___lldiv@quotient^0,f,c
   560  00065E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   561  000660  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   562  000662  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   563  000664  5005               	movf	___lldiv@divisor^0,w,c
   564  000666  5C01               	subwf	___lldiv@dividend^0,w,c
   565  000668  5006               	movf	(___lldiv@divisor+1)^0,w,c
   566  00066A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   567  00066C  5007               	movf	(___lldiv@divisor+2)^0,w,c
   568  00066E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   569  000670  5008               	movf	(___lldiv@divisor+3)^0,w,c
   570  000672  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   571  000674  A0D8               	btfss	status,0,c
   572  000676  EF3F  F003         	goto	u141
   573  00067A  EF41  F003         	goto	u140
   574  00067E                     u141:
   575  00067E  EF4A  F003         	goto	l810
   576  000682                     u140:
   577  000682  5005               	movf	___lldiv@divisor^0,w,c
   578  000684  5E01               	subwf	___lldiv@dividend^0,f,c
   579  000686  5006               	movf	(___lldiv@divisor+1)^0,w,c
   580  000688  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   581  00068A  5007               	movf	(___lldiv@divisor+2)^0,w,c
   582  00068C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   583  00068E  5008               	movf	(___lldiv@divisor+3)^0,w,c
   584  000690  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   585  000692  8009               	bsf	___lldiv@quotient^0,0,c
   586  000694                     l810:
   587  000694  90D8               	bcf	status,0,c
   588  000696  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   589  000698  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   590  00069A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   591  00069C  3205               	rrcf	___lldiv@divisor^0,f,c
   592  00069E  2E0D               	decfsz	___lldiv@counter^0,f,c
   593  0006A0  EF2D  F003         	goto	l802
   594  0006A4                     l84:
   595  0006A4  C009  F001         	movff	___lldiv@quotient,?___lldiv
   596  0006A8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   597  0006AC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   598  0006B0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   599  0006B4  0012               	return		;funcret
   600  0006B6                     __end_of___lldiv:
   601                           	callstack 0
   602                           
   603 ;; *************** function _UART_Config_TXSTA *****************
   604 ;; Defined at:
   605 ;;		line 11 in file "uart.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  config          1    wreg     struct .
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  config          1    0[COMRAM] struct .
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   619 ;;      Params:         0       0       0       0       0       0       0
   620 ;;      Locals:         1       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0
   622 ;;      Totals:         1       0       0       0       0       0       0
   623 ;;Total ram usage:        1 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text5
   633  0007A6                     __ptext5:
   634                           	callstack 0
   635  0007A6                     _UART_Config_TXSTA:
   636                           	callstack 30
   637                           
   638                           ;incstack = 0
   639                           ;UART_Config_TXSTA@config stored from wreg
   640  0007A6  6E01               	movwf	UART_Config_TXSTA@config^0,c
   641  0007A8                     
   642                           ;uart.c: 12:     TXSTAbits.TXEN = config.txEnable;
   643  0007A8  A001               	btfss	UART_Config_TXSTA@config^0,0,c
   644  0007AA  D002               	bra	u75
   645  0007AC  8AAC               	bsf	172,5,c	;volatile
   646  0007AE  D001               	bra	u77
   647  0007B0                     u75:
   648  0007B0  9AAC               	bcf	172,5,c	;volatile
   649  0007B2                     u77:
   650                           
   651                           ;uart.c: 13:     TXSTAbits.SYNC = config.syncMode;
   652  0007B2  A201               	btfss	UART_Config_TXSTA@config^0,1,c
   653  0007B4  D002               	bra	u85
   654  0007B6  88AC               	bsf	172,4,c	;volatile
   655  0007B8  D001               	bra	u87
   656  0007BA                     u85:
   657  0007BA  98AC               	bcf	172,4,c	;volatile
   658  0007BC                     u87:
   659                           
   660                           ;uart.c: 14:     TXSTAbits.BRGH = config.highSpeed;
   661  0007BC  A401               	btfss	UART_Config_TXSTA@config^0,2,c
   662  0007BE  D002               	bra	u95
   663  0007C0  84AC               	bsf	172,2,c	;volatile
   664  0007C2  D001               	bra	u97
   665  0007C4                     u95:
   666  0007C4  94AC               	bcf	172,2,c	;volatile
   667  0007C6                     u97:
   668  0007C6  0012               	return		;funcret
   669  0007C8                     __end_of_UART_Config_TXSTA:
   670                           	callstack 0
   671                           
   672 ;; *************** function _UART_Config_RCSTA *****************
   673 ;; Defined at:
   674 ;;		line 19 in file "uart.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  config          1    wreg     struct .
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  config          1    0[COMRAM] struct .
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   688 ;;      Params:         0       0       0       0       0       0       0
   689 ;;      Locals:         1       0       0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0
   691 ;;      Totals:         1       0       0       0       0       0       0
   692 ;;Total ram usage:        1 bytes
   693 ;; Hardware stack levels used: 1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text6
   702  0007C8                     __ptext6:
   703                           	callstack 0
   704  0007C8                     _UART_Config_RCSTA:
   705                           	callstack 30
   706                           
   707                           ;incstack = 0
   708                           ;UART_Config_RCSTA@config stored from wreg
   709  0007C8  6E01               	movwf	UART_Config_RCSTA@config^0,c
   710  0007CA                     
   711                           ;uart.c: 20:     RCSTAbits.SPEN = config.SerialPortEnable;
   712  0007CA  A001               	btfss	UART_Config_RCSTA@config^0,0,c
   713  0007CC  D002               	bra	u105
   714  0007CE  8EAB               	bsf	171,7,c	;volatile
   715  0007D0  D001               	bra	u107
   716  0007D2                     u105:
   717  0007D2  9EAB               	bcf	171,7,c	;volatile
   718  0007D4                     u107:
   719                           
   720                           ;uart.c: 21:     RCSTAbits.CREN = config.continiousReciveEnable;
   721  0007D4  A201               	btfss	UART_Config_RCSTA@config^0,1,c
   722  0007D6  D002               	bra	u115
   723  0007D8  88AB               	bsf	171,4,c	;volatile
   724  0007DA  D001               	bra	u117
   725  0007DC                     u115:
   726  0007DC  98AB               	bcf	171,4,c	;volatile
   727  0007DE                     u117:
   728  0007DE  0012               	return		;funcret
   729  0007E0                     __end_of_UART_Config_RCSTA:
   730                           	callstack 0
   731                           
   732                           	psect	rparam
   733  0000                     
   734                           	psect	idloc
   735                           
   736                           ;Config register IDLOC0 @ 0x200000
   737                           ;	unspecified, using default values
   738  200000                     	org	2097152
   739  200000  FF                 	db	255
   740                           
   741                           ;Config register IDLOC1 @ 0x200001
   742                           ;	unspecified, using default values
   743  200001                     	org	2097153
   744  200001  FF                 	db	255
   745                           
   746                           ;Config register IDLOC2 @ 0x200002
   747                           ;	unspecified, using default values
   748  200002                     	org	2097154
   749  200002  FF                 	db	255
   750                           
   751                           ;Config register IDLOC3 @ 0x200003
   752                           ;	unspecified, using default values
   753  200003                     	org	2097155
   754  200003  FF                 	db	255
   755                           
   756                           ;Config register IDLOC4 @ 0x200004
   757                           ;	unspecified, using default values
   758  200004                     	org	2097156
   759  200004  FF                 	db	255
   760                           
   761                           ;Config register IDLOC5 @ 0x200005
   762                           ;	unspecified, using default values
   763  200005                     	org	2097157
   764  200005  FF                 	db	255
   765                           
   766                           ;Config register IDLOC6 @ 0x200006
   767                           ;	unspecified, using default values
   768  200006                     	org	2097158
   769  200006  FF                 	db	255
   770                           
   771                           ;Config register IDLOC7 @ 0x200007
   772                           ;	unspecified, using default values
   773  200007                     	org	2097159
   774  200007  FF                 	db	255
   775                           
   776                           	psect	config
   777                           
   778                           ; Padding undefined space
   779  300000                     	org	3145728
   780  300000  FF                 	db	255
   781                           
   782                           ;Config register CONFIG1H @ 0x300001
   783                           ;	unspecified, using default values
   784                           ;	Oscillator Selection bits
   785                           ;	OSC = 0x7, unprogrammed default
   786                           ;	Fail-Safe Clock Monitor Enable bit
   787                           ;	FCMEN = 0x0, unprogrammed default
   788                           ;	Internal/External Oscillator Switchover bit
   789                           ;	IESO = 0x0, unprogrammed default
   790  300001                     	org	3145729
   791  300001  07                 	db	7
   792                           
   793                           ;Config register CONFIG2L @ 0x300002
   794                           ;	unspecified, using default values
   795                           ;	Power-up Timer Enable bit
   796                           ;	PWRT = 0x1, unprogrammed default
   797                           ;	Brown-out Reset Enable bits
   798                           ;	BOREN = 0x3, unprogrammed default
   799                           ;	Brown-out Reset Voltage bits
   800                           ;	BORV = 0x3, unprogrammed default
   801  300002                     	org	3145730
   802  300002  1F                 	db	31
   803                           
   804                           ;Config register CONFIG2H @ 0x300003
   805                           ;	unspecified, using default values
   806                           ;	Watchdog Timer Enable bit
   807                           ;	WDT = 0x1, unprogrammed default
   808                           ;	Watchdog Timer Postscale Select bits
   809                           ;	WDTPS = 0xF, unprogrammed default
   810  300003                     	org	3145731
   811  300003  1F                 	db	31
   812                           
   813                           ; Padding undefined space
   814  300004                     	org	3145732
   815  300004  FF                 	db	255
   816                           
   817                           ;Config register CONFIG3H @ 0x300005
   818                           ;	unspecified, using default values
   819                           ;	PORTB A/D Enable bit
   820                           ;	PBADEN = 0x1, unprogrammed default
   821                           ;	Low-Power Timer 1 Oscillator Enable bit
   822                           ;	LPT1OSC = 0x0, unprogrammed default
   823                           ;	MCLR Pin Enable bit
   824                           ;	MCLRE = 0x1, unprogrammed default
   825  300005                     	org	3145733
   826  300005  82                 	db	130
   827                           
   828                           ;Config register CONFIG4L @ 0x300006
   829                           ;	unspecified, using default values
   830                           ;	Stack Full/Underflow Reset Enable bit
   831                           ;	STVREN = 0x1, unprogrammed default
   832                           ;	Single-Supply ICSP Enable bit
   833                           ;	LVP = 0x1, unprogrammed default
   834                           ;	Boot Block Size Select bit
   835                           ;	BBSIZ = 0x0, unprogrammed default
   836                           ;	Extended Instruction Set Enable bit
   837                           ;	XINST = 0x0, unprogrammed default
   838                           ;	Background Debugger Enable bit
   839                           ;	DEBUG = 0x1, unprogrammed default
   840  300006                     	org	3145734
   841  300006  85                 	db	133
   842                           
   843                           ; Padding undefined space
   844  300007                     	org	3145735
   845  300007  FF                 	db	255
   846                           
   847                           ;Config register CONFIG5L @ 0x300008
   848                           ;	unspecified, using default values
   849                           ;	Code Protection bit
   850                           ;	CP0 = 0x1, unprogrammed default
   851                           ;	Code Protection bit
   852                           ;	CP1 = 0x1, unprogrammed default
   853                           ;	Code Protection bit
   854                           ;	CP2 = 0x1, unprogrammed default
   855                           ;	Code Protection bit
   856                           ;	CP3 = 0x1, unprogrammed default
   857  300008                     	org	3145736
   858  300008  0F                 	db	15
   859                           
   860                           ;Config register CONFIG5H @ 0x300009
   861                           ;	unspecified, using default values
   862                           ;	Boot Block Code Protection bit
   863                           ;	CPB = 0x1, unprogrammed default
   864                           ;	Data EEPROM Code Protection bit
   865                           ;	CPD = 0x1, unprogrammed default
   866  300009                     	org	3145737
   867  300009  C0                 	db	192
   868                           
   869                           ;Config register CONFIG6L @ 0x30000A
   870                           ;	unspecified, using default values
   871                           ;	Write Protection bit
   872                           ;	WRT0 = 0x1, unprogrammed default
   873                           ;	Write Protection bit
   874                           ;	WRT1 = 0x1, unprogrammed default
   875                           ;	Write Protection bit
   876                           ;	WRT2 = 0x1, unprogrammed default
   877                           ;	Write Protection bit
   878                           ;	WRT3 = 0x1, unprogrammed default
   879  30000A                     	org	3145738
   880  30000A  0F                 	db	15
   881                           
   882                           ;Config register CONFIG6H @ 0x30000B
   883                           ;	unspecified, using default values
   884                           ;	Configuration Register Write Protection bit
   885                           ;	WRTC = 0x1, unprogrammed default
   886                           ;	Boot Block Write Protection bit
   887                           ;	WRTB = 0x1, unprogrammed default
   888                           ;	Data EEPROM Write Protection bit
   889                           ;	WRTD = 0x1, unprogrammed default
   890  30000B                     	org	3145739
   891  30000B  E0                 	db	224
   892                           
   893                           ;Config register CONFIG7L @ 0x30000C
   894                           ;	unspecified, using default values
   895                           ;	Table Read Protection bit
   896                           ;	EBTR0 = 0x1, unprogrammed default
   897                           ;	Table Read Protection bit
   898                           ;	EBTR1 = 0x1, unprogrammed default
   899                           ;	Table Read Protection bit
   900                           ;	EBTR2 = 0x1, unprogrammed default
   901                           ;	Table Read Protection bit
   902                           ;	EBTR3 = 0x1, unprogrammed default
   903  30000C                     	org	3145740
   904  30000C  0F                 	db	15
   905                           
   906                           ;Config register CONFIG7H @ 0x30000D
   907                           ;	unspecified, using default values
   908                           ;	Boot Block Table Read Protection bit
   909                           ;	EBTRB = 0x1, unprogrammed default
   910  30000D                     	org	3145741
   911  30000D  40                 	db	64
   912                           tosu	equ	0xFFF
   913                           tosh	equ	0xFFE
   914                           tosl	equ	0xFFD
   915                           stkptr	equ	0xFFC
   916                           pclatu	equ	0xFFB
   917                           pclath	equ	0xFFA
   918                           pcl	equ	0xFF9
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           prodh	equ	0xFF4
   924                           prodl	equ	0xFF3
   925                           indf0	equ	0xFEF
   926                           postinc0	equ	0xFEE
   927                           postdec0	equ	0xFED
   928                           preinc0	equ	0xFEC
   929                           plusw0	equ	0xFEB
   930                           fsr0h	equ	0xFEA
   931                           fsr0l	equ	0xFE9
   932                           wreg	equ	0xFE8
   933                           indf1	equ	0xFE7
   934                           postinc1	equ	0xFE6
   935                           postdec1	equ	0xFE5
   936                           preinc1	equ	0xFE4
   937                           plusw1	equ	0xFE3
   938                           fsr1h	equ	0xFE2
   939                           fsr1l	equ	0xFE1
   940                           bsr	equ	0xFE0
   941                           indf2	equ	0xFDF
   942                           postinc2	equ	0xFDE
   943                           postdec2	equ	0xFDD
   944                           preinc2	equ	0xFDC
   945                           plusw2	equ	0xFDB
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_TransmitString@data	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     728
                                             19 COMRAM     8     8      0
                  _UART_Config_RCSTA
                  _UART_Config_TXSTA
                          _UART_Init
                _UART_TransmitString
             _UART_WaitForTxComplete
 ---------------------------------------------------------------------------------
 (1) _UART_WaitForTxComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TransmitString                                  2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            6     2      4     412
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _UART_Config_TXSTA                                    1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Config_RCSTA                                    1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Config_RCSTA
   _UART_Config_TXSTA
   _UART_Init
     ___lldiv
   _UART_TransmitString
   _UART_WaitForTxComplete

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1B      1B       1       28.4%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 27 12:20:35 2023

                             l22 07EE                               l31 0764  
                             l51 07C6                               l27 0728  
                             l19 07E0                               l54 07DE  
                             l48 07A4                               l91 06B4  
                             l84 06A4                               u40 07EE  
                             u41 07EA                               u75 07B0  
                             u85 07BA                               u77 07B2  
                             u95 07C4                               u87 07BC  
                             u97 07C6                              l800 064C  
                            l810 0694                              l802 065A  
                            l812 069E                              l804 0664  
                            l820 0748                              l806 0682  
                            l822 0766                              l814 0724  
                            l830 06BE                              l808 0692  
                            l816 0736                              l752 07E0  
                            l840 06E0                              l832 06C0  
                            l824 06B6                              l762 07A8  
                            l818 0744                              l842 06F4  
                            l834 06C2                              l826 06BA  
                            l764 07CA                              l844 06F8  
                            l836 06C4                              l828 06BC  
                            l846 0704                              l838 06CA  
                            l792 0612                              l794 0622  
                            l796 0638                              l798 0640  
                            u120 0638                              u105 07D2  
                            u121 0634                              u130 065A  
                            u115 07DC                              u107 07D4  
                            u131 0656                              u140 0682  
                            u117 07DE                              u141 067E  
                            u150 0736                              u151 0732  
                            u160 0764                              u161 0760  
                            u177 070E                              wreg 000FE8  
                           STR_1 0601                             _main 06B6  
                           start 0000                     ___param_bank 000000  
        ?_UART_WaitForTxComplete 0001                _UART_Config_RCSTA 07C8  
                          ?_main 0001                _UART_Config_TXSTA 07A6  
                __end_of___lldiv 06B6               ?_UART_Config_RCSTA 0001  
                          _SPBRG 000FAF                            _TRISC 000F94  
                          _TXREG 000FAD               ?_UART_Config_TXSTA 0001  
             __size_of_UART_Init 0040                     main@rxConfig 0016  
            ??_UART_Config_RCSTA 0001                     main@txConfig 0017  
            ??_UART_Config_TXSTA 0001                            tablat 000FF5  
                          status 000FD8   __end_of_UART_WaitForTxComplete 07F0  
                __initialization 07F0                     __end_of_main 0724  
      __end_of_UART_Config_RCSTA 07E0      __end_of_UART_TransmitString 0766  
      __end_of_UART_Config_TXSTA 07C8                           ??_main 0014  
                  __activetblptr 000001                __end_of_UART_Init 07A6  
                      ??___lldiv 0009                           isa$std 000001  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                     __accesstop 0060          __end_of__initialization 07F0  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
     __size_of_UART_Config_RCSTA 0018       __size_of_UART_Config_TXSTA 0022  
        UART_Config_RCSTA@config 0001                          __Hparam 0000  
                        __Lparam 0000                          ___lldiv 0612  
                   __psmallconst 0600                          __pcinit 07F0  
                        __ramtop 0600                          __ptext0 06B6  
                        __ptext1 07E0                          __ptext2 0724  
                        __ptext3 0766                          __ptext4 0612  
                        __ptext5 07A6                          __ptext6 07C8  
                 main@uartConfig 0018             end_of_initialization 07F0  
                ___lldiv@divisor 0005                  ___lldiv@counter 000D  
                      _RCSTAbits 000FAB                        _UART_Init 0766  
   __size_of_UART_TransmitString 0042                        _TXSTAbits 000FAC  
                     ?_UART_Init 000E              start_initialization 07F0  
       ??_UART_WaitForTxComplete 0001                         ?___lldiv 0001  
                    ??_UART_Init 0012                  UART_Init@config 000E  
                    __smallconst 0600  __size_of_UART_WaitForTxComplete 0010  
            _UART_TransmitString 0724                         _PIR1bits 000F9E  
        UART_Config_TXSTA@config 0001             ?_UART_TransmitString 0001  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0600                 __size_of___lldiv 00A4  
         _UART_WaitForTxComplete 07E0            ??_UART_TransmitString 0003  
                  __size_of_main 006E                         isa$xinst 000000  
        UART_TransmitString@data 0001                 ___lldiv@dividend 0001  
               ___lldiv@quotient 0009  
