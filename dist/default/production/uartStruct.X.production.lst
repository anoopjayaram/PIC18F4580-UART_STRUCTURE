

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Nov 26 09:57:56 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.32
    20                           ; Generated 02/02/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4580 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _RCSTA	set	4011
    55  0000                     _TRISC	set	3988
    56  0000                     _TXREG	set	4013
    57  0000                     _PIR1bits	set	3998
    58  0000                     _TXSTAbits	set	4012
    59  0000                     _SPBRG	set	4015
    60                           
    61                           	psect	smallconst
    62  000600                     __psmallconst:
    63                           	callstack 0
    64  000600  00                 	db	0
    65  000601                     STR_1:
    66  000601  48                 	db	72	;'H'
    67  000602  69                 	db	105	;'i'
    68  000603  20                 	db	32
    69  000604  61                 	db	97	;'a'
    70  000605  6C                 	db	108	;'l'
    71  000606  6C                 	db	108	;'l'
    72  000607  00                 	db	0
    73  000608  00                 	db	0	; dummy byte at the end
    74  0000                     
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78  0007D6                     __pcinit:
    79                           	callstack 0
    80  0007D6                     start_initialization:
    81                           	callstack 0
    82  0007D6                     __initialization:
    83                           	callstack 0
    84  0007D6                     end_of_initialization:
    85                           	callstack 0
    86  0007D6                     __end_of__initialization:
    87                           	callstack 0
    88  0007D6  0E00               	movlw	low (__Lsmallconst shr (0+16))
    89  0007D8  6EF8               	movwf	tblptru,c
    90  0007DA  0E06               	movlw	high __Lsmallconst
    91  0007DC  6EF7               	movwf	tblptrh,c
    92  0007DE  0100               	movlb	0
    93  0007E0  EF57  F003         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	cstackCOMRAM
    96  000001                     __pcstackCOMRAM:
    97                           	callstack 0
    98  000001                     ?___lldiv:
    99                           	callstack 0
   100  000001                     UART_Config_TXSTA@config:
   101                           	callstack 0
   102  000001                     UART_TransmitString@data:
   103                           	callstack 0
   104  000001                     ___lldiv@dividend:
   105                           	callstack 0
   106                           
   107                           ; 4 bytes @ 0x0
   108  000001                     	ds	2
   109  000003                     
   110                           ; 1 bytes @ 0x2
   111  000003                     	ds	2
   112  000005                     ___lldiv@divisor:
   113                           	callstack 0
   114                           
   115                           ; 4 bytes @ 0x4
   116  000005                     	ds	4
   117  000009                     ___lldiv@quotient:
   118                           	callstack 0
   119                           
   120                           ; 4 bytes @ 0x8
   121  000009                     	ds	4
   122  00000D                     ___lldiv@counter:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0xC
   126  00000D                     	ds	1
   127  00000E                     UART_Init@config:
   128                           	callstack 0
   129                           
   130                           ; 4 bytes @ 0xD
   131  00000E                     	ds	4
   132  000012                     ??_UART_Init:
   133                           
   134                           ; 1 bytes @ 0x11
   135  000012                     	ds	4
   136  000016                     ??_main:
   137                           
   138                           ; 1 bytes @ 0x15
   139  000016                     	ds	2
   140  000018                     main@txConfig:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x17
   144  000018                     	ds	1
   145  000019                     main@uartConfig:
   146                           	callstack 0
   147                           
   148                           ; 4 bytes @ 0x18
   149  000019                     	ds	4
   150                           
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 59 in file "uartStructMain.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;  uartConfig      4   24[COMRAM] struct .
   161 ;;  txConfig        1   23[COMRAM] struct .
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   171 ;;      Params:         0       0       0       0       0       0       0
   172 ;;      Locals:         5       0       0       0       0       0       0
   173 ;;      Temps:          2       0       0       0       0       0       0
   174 ;;      Totals:         7       0       0       0       0       0       0
   175 ;;Total ram usage:        7 bytes
   176 ;; Hardware stack levels required when called: 2
   177 ;; This function calls:
   178 ;;		_UART_Config_TXSTA
   179 ;;		_UART_Init
   180 ;;		_UART_TransmitString
   181 ;;		_UART_WaitForTxComplete
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  0006AE                     __ptext0:
   189                           	callstack 0
   190  0006AE                     _main:
   191                           	callstack 29
   192  0006AE                     
   193                           ;uartStructMain.c: 60:      TRISC=0X00;
   194  0006AE  0E00               	movlw	0
   195  0006B0  6E94               	movwf	148,c	;volatile
   196  0006B2                     
   197                           ;uartStructMain.c: 61:     TXSTA_Config txConfig;;uartStructMain.c: 62:     txConfig.txE
      +                          nable = 1;
   198  0006B2  8018               	bsf	main@txConfig^0,0,c
   199  0006B4                     
   200                           ;uartStructMain.c: 63:     txConfig.syncMode = 0;
   201  0006B4  9218               	bcf	main@txConfig^0,1,c
   202  0006B6                     
   203                           ;uartStructMain.c: 64:     txConfig.highBoadRate = 1;
   204  0006B6  8418               	bsf	main@txConfig^0,2,c
   205  0006B8                     
   206                           ;uartStructMain.c: 67:     UART_Config_TXSTA(txConfig);
   207  0006B8  5018               	movf	main@txConfig^0,w,c
   208  0006BA  ECD2  F003         	call	_UART_Config_TXSTA
   209  0006BE                     
   210                           ;uartStructMain.c: 68:     RCSTA=0X90;
   211  0006BE  0E90               	movlw	144
   212  0006C0  6EAB               	movwf	171,c	;volatile
   213  0006C2                     
   214                           ;uartStructMain.c: 69:     UART_Config uartConfig;;uartStructMain.c: 70:     uartConfig.
      +                          baud_rate = 57600;
   215  0006C2  0EE1               	movlw	225
   216  0006C4  6E1A               	movwf	(main@uartConfig+1)^0,c
   217  0006C6  0E00               	movlw	0
   218  0006C8  6E19               	movwf	main@uartConfig^0,c
   219  0006CA                     
   220                           ;uartStructMain.c: 71:     uartConfig.data_bits = 8;
   221  0006CA  0E08               	movlw	8
   222  0006CC  6E1B               	movwf	(main@uartConfig+2)^0,c
   223  0006CE                     
   224                           ;uartStructMain.c: 72:     uartConfig.stop_bits = 1;
   225  0006CE  0E01               	movlw	1
   226  0006D0  6E1C               	movwf	(main@uartConfig+3)^0,c
   227  0006D2                     
   228                           ;uartStructMain.c: 75:     UART_Init(uartConfig);
   229  0006D2  C019  F00E         	movff	main@uartConfig,UART_Init@config
   230  0006D6  C01A  F00F         	movff	main@uartConfig+1,UART_Init@config+1
   231  0006DA  C01B  F010         	movff	main@uartConfig+2,UART_Init@config+2
   232  0006DE  C01C  F011         	movff	main@uartConfig+3,UART_Init@config+3
   233  0006E2  EC8D  F003         	call	_UART_Init	;wreg free
   234  0006E6                     l835:
   235                           
   236                           ;uartStructMain.c: 80:         UART_WaitForTxComplete();
   237  0006E6  ECE3  F003         	call	_UART_WaitForTxComplete	;wreg free
   238  0006EA                     
   239                           ;uartStructMain.c: 83:         TXREG = 'W';
   240  0006EA  0E57               	movlw	87
   241  0006EC  6EAD               	movwf	173,c	;volatile
   242  0006EE                     
   243                           ;uartStructMain.c: 84:         UART_TransmitString("Hi all");
   244  0006EE  0E01               	movlw	low STR_1
   245  0006F0  6E01               	movwf	UART_TransmitString@data^0,c
   246  0006F2  0E06               	movlw	high STR_1
   247  0006F4  6E02               	movwf	(UART_TransmitString@data+1)^0,c
   248  0006F6  ECB1  F003         	call	_UART_TransmitString	;wreg free
   249  0006FA                     
   250                           ;uartStructMain.c: 87:         _delay((unsigned long)((1000)*(20000000UL/4000.0)));
   251  0006FA  0E1A               	movlw	26
   252  0006FC  6E17               	movwf	(??_main+1)^0,c
   253  0006FE  0E5E               	movlw	94
   254  000700  6E16               	movwf	??_main^0,c
   255  000702  0E6E               	movlw	110
   256  000704                     u177:
   257  000704  2EE8               	decfsz	wreg,f,c
   258  000706  D7FE               	bra	u177
   259  000708  2E16               	decfsz	??_main^0,f,c
   260  00070A  D7FC               	bra	u177
   261  00070C  2E17               	decfsz	(??_main+1)^0,f,c
   262  00070E  D7FA               	bra	u177
   263  000710  D000               	nop2	
   264  000712  EF73  F003         	goto	l835
   265  000716  EF00  F000         	goto	start
   266  00071A                     __end_of_main:
   267                           	callstack 0
   268                           
   269 ;; *************** function _UART_WaitForTxComplete *****************
   270 ;; Defined at:
   271 ;;		line 43 in file "uartStructMain.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		None
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   285 ;;      Params:         0       0       0       0       0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0
   288 ;;      Totals:         0       0       0       0       0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels used: 1
   291 ;; This function calls:
   292 ;;		Nothing
   293 ;; This function is called by:
   294 ;;		_main
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text1
   299  0007C6                     __ptext1:
   300                           	callstack 0
   301  0007C6                     _UART_WaitForTxComplete:
   302                           	callstack 30
   303  0007C6                     l23:
   304                           
   305                           ;uartStructMain.c: 44:     while (!PIR1bits.TXIF) {
   306  0007C6  A89E               	btfss	158,4,c	;volatile
   307  0007C8  EFE8  F003         	goto	u81
   308  0007CC  EFEA  F003         	goto	u80
   309  0007D0                     u81:
   310  0007D0  EFE3  F003         	goto	l23
   311  0007D4                     u80:
   312  0007D4  0012               	return		;funcret
   313  0007D6                     __end_of_UART_WaitForTxComplete:
   314                           	callstack 0
   315                           
   316 ;; *************** function _UART_TransmitString *****************
   317 ;; Defined at:
   318 ;;		line 49 in file "uartStructMain.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;  data            2    0[COMRAM] PTR const unsigned char 
   321 ;;		 -> STR_1(7), 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         2       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0
   336 ;;      Totals:         2       0       0       0       0       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text2
   347  000762                     __ptext2:
   348                           	callstack 0
   349  000762                     _UART_TransmitString:
   350                           	callstack 30
   351  000762                     
   352                           ;uartStructMain.c: 50:     while (*data != '\0') {
   353  000762  EFC3  F003         	goto	l813
   354  000766                     l31:
   355                           
   356                           ;uartStructMain.c: 52:         while (!TXSTAbits.TRMT) {
   357  000766  A2AC               	btfss	172,1,c	;volatile
   358  000768  EFB8  F003         	goto	u151
   359  00076C  EFBA  F003         	goto	u150
   360  000770                     u151:
   361  000770  EFB3  F003         	goto	l31
   362  000774                     u150:
   363  000774                     
   364                           ;uartStructMain.c: 55:         TXREG = *data;
   365  000774  C001  FFF6         	movff	UART_TransmitString@data,tblptrl
   366  000778  C002  FFF7         	movff	UART_TransmitString@data+1,tblptrh
   367  00077C                     	if	0	;tblptru may be non-zero
   368  00077C                     	endif
   369  00077C                     	if	0	;tblptru may be non-zero
   370  00077C                     	endif
   371  00077C  0008               	tblrd		*
   372  00077E  CFF5 FFAD          	movff	tablat,4013	;volatile
   373  000782                     
   374                           ;uartStructMain.c: 56:         data++;
   375  000782  4A01               	infsnz	UART_TransmitString@data^0,f,c
   376  000784  2A02               	incf	(UART_TransmitString@data+1)^0,f,c
   377  000786                     l813:
   378                           
   379                           ;uartStructMain.c: 50:     while (*data != '\0') {
   380  000786  C001  FFF6         	movff	UART_TransmitString@data,tblptrl
   381  00078A  C002  FFF7         	movff	UART_TransmitString@data+1,tblptrh
   382  00078E                     	if	0	;tblptru may be non-zero
   383  00078E                     	endif
   384  00078E                     	if	0	;tblptru may be non-zero
   385  00078E                     	endif
   386  00078E  0008               	tblrd		*
   387  000790  50F5               	movf	tablat,w,c
   388  000792  0900               	iorlw	0
   389  000794  A4D8               	btfss	status,2,c
   390  000796  EFCF  F003         	goto	u161
   391  00079A  EFD1  F003         	goto	u160
   392  00079E                     u161:
   393  00079E  EFB3  F003         	goto	l31
   394  0007A2                     u160:
   395  0007A2  0012               	return		;funcret
   396  0007A4                     __end_of_UART_TransmitString:
   397                           	callstack 0
   398                           
   399 ;; *************** function _UART_Init *****************
   400 ;; Defined at:
   401 ;;		line 24 in file "uartStructMain.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  config          4   13[COMRAM] struct .
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   415 ;;      Params:         4       0       0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0
   417 ;;      Temps:          4       0       0       0       0       0       0
   418 ;;      Totals:         8       0       0       0       0       0       0
   419 ;;Total ram usage:        8 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 1
   422 ;; This function calls:
   423 ;;		___lldiv
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text3
   430  00071A                     __ptext3:
   431                           	callstack 0
   432  00071A                     _UART_Init:
   433                           	callstack 29
   434  00071A                     
   435                           ;uartStructMain.c: 26:     SPBRG = (20000000UL/(16UL * config.baud_rate)-1);
   436  00071A  0E00               	movlw	0
   437  00071C  6E01               	movwf	___lldiv@dividend^0,c
   438  00071E  0E2D               	movlw	45
   439  000720  6E02               	movwf	(___lldiv@dividend+1)^0,c
   440  000722  0E31               	movlw	49
   441  000724  6E03               	movwf	(___lldiv@dividend+2)^0,c
   442  000726  0E01               	movlw	1
   443  000728  6E04               	movwf	(___lldiv@dividend+3)^0,c
   444  00072A  500E               	movf	UART_Init@config^0,w,c
   445  00072C  6E12               	movwf	??_UART_Init^0,c
   446  00072E  500F               	movf	(UART_Init@config+1)^0,w,c
   447  000730  6E13               	movwf	(??_UART_Init+1)^0,c
   448  000732  6A14               	clrf	(??_UART_Init+2)^0,c
   449  000734  6A15               	clrf	(??_UART_Init+3)^0,c
   450  000736  0E04               	movlw	4
   451  000738                     u145:
   452  000738  90D8               	bcf	status,0,c
   453  00073A  3612               	rlcf	??_UART_Init^0,f,c
   454  00073C  3613               	rlcf	(??_UART_Init+1)^0,f,c
   455  00073E  3614               	rlcf	(??_UART_Init+2)^0,f,c
   456  000740  3615               	rlcf	(??_UART_Init+3)^0,f,c
   457  000742  2EE8               	decfsz	wreg,f,c
   458  000744  EF9C  F003         	goto	u145
   459  000748  C012  F005         	movff	??_UART_Init,___lldiv@divisor
   460  00074C  C013  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
   461  000750  C014  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
   462  000754  C015  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
   463  000758  EC05  F003         	call	___lldiv	;wreg free
   464  00075C  0401               	decf	?___lldiv^0,w,c
   465  00075E  6EAF               	movwf	175,c	;volatile
   466  000760  0012               	return		;funcret
   467  000762                     __end_of_UART_Init:
   468                           	callstack 0
   469                           
   470 ;; *************** function ___lldiv *****************
   471 ;; Defined at:
   472 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  dividend        4    0[COMRAM] unsigned long 
   475 ;;  divisor         4    4[COMRAM] unsigned long 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  quotient        4    8[COMRAM] unsigned long 
   478 ;;  counter         1   12[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  4    0[COMRAM] unsigned long 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   488 ;;      Params:         8       0       0       0       0       0       0
   489 ;;      Locals:         5       0       0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0
   491 ;;      Totals:        13       0       0       0       0       0       0
   492 ;;Total ram usage:       13 bytes
   493 ;; Hardware stack levels used: 1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_UART_Init
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text4
   502  00060A                     __ptext4:
   503                           	callstack 0
   504  00060A                     ___lldiv:
   505                           	callstack 29
   506  00060A  0E00               	movlw	0
   507  00060C  6E09               	movwf	___lldiv@quotient^0,c
   508  00060E  0E00               	movlw	0
   509  000610  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   510  000612  0E00               	movlw	0
   511  000614  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   512  000616  0E00               	movlw	0
   513  000618  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   514  00061A  5005               	movf	___lldiv@divisor^0,w,c
   515  00061C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   516  00061E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   517  000620  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   518  000622  B4D8               	btfsc	status,2,c
   519  000624  EF16  F003         	goto	u111
   520  000628  EF18  F003         	goto	u110
   521  00062C                     u111:
   522  00062C  EF4E  F003         	goto	l73
   523  000630                     u110:
   524  000630  0E01               	movlw	1
   525  000632  6E0D               	movwf	___lldiv@counter^0,c
   526  000634  EF22  F003         	goto	l791
   527  000638                     l789:
   528  000638  90D8               	bcf	status,0,c
   529  00063A  3605               	rlcf	___lldiv@divisor^0,f,c
   530  00063C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   531  00063E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   532  000640  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   533  000642  2A0D               	incf	___lldiv@counter^0,f,c
   534  000644                     l791:
   535  000644  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   536  000646  EF27  F003         	goto	u121
   537  00064A  EF29  F003         	goto	u120
   538  00064E                     u121:
   539  00064E  EF1C  F003         	goto	l789
   540  000652                     u120:
   541  000652                     l793:
   542  000652  90D8               	bcf	status,0,c
   543  000654  3609               	rlcf	___lldiv@quotient^0,f,c
   544  000656  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   545  000658  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   546  00065A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   547  00065C  5005               	movf	___lldiv@divisor^0,w,c
   548  00065E  5C01               	subwf	___lldiv@dividend^0,w,c
   549  000660  5006               	movf	(___lldiv@divisor+1)^0,w,c
   550  000662  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   551  000664  5007               	movf	(___lldiv@divisor+2)^0,w,c
   552  000666  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   553  000668  5008               	movf	(___lldiv@divisor+3)^0,w,c
   554  00066A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   555  00066C  A0D8               	btfss	status,0,c
   556  00066E  EF3B  F003         	goto	u131
   557  000672  EF3D  F003         	goto	u130
   558  000676                     u131:
   559  000676  EF46  F003         	goto	l801
   560  00067A                     u130:
   561  00067A  5005               	movf	___lldiv@divisor^0,w,c
   562  00067C  5E01               	subwf	___lldiv@dividend^0,f,c
   563  00067E  5006               	movf	(___lldiv@divisor+1)^0,w,c
   564  000680  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   565  000682  5007               	movf	(___lldiv@divisor+2)^0,w,c
   566  000684  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   567  000686  5008               	movf	(___lldiv@divisor+3)^0,w,c
   568  000688  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   569  00068A  8009               	bsf	___lldiv@quotient^0,0,c
   570  00068C                     l801:
   571  00068C  90D8               	bcf	status,0,c
   572  00068E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   573  000690  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   574  000692  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   575  000694  3205               	rrcf	___lldiv@divisor^0,f,c
   576  000696  2E0D               	decfsz	___lldiv@counter^0,f,c
   577  000698  EF29  F003         	goto	l793
   578  00069C                     l73:
   579  00069C  C009  F001         	movff	___lldiv@quotient,?___lldiv
   580  0006A0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   581  0006A4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   582  0006A8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   583  0006AC  0012               	return		;funcret
   584  0006AE                     __end_of___lldiv:
   585                           	callstack 0
   586                           
   587 ;; *************** function _UART_Config_TXSTA *****************
   588 ;; Defined at:
   589 ;;		line 36 in file "uartStructMain.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  config          1    wreg     struct .
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  config          1    0[COMRAM] struct .
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   603 ;;      Params:         0       0       0       0       0       0       0
   604 ;;      Locals:         1       0       0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0
   606 ;;      Totals:         1       0       0       0       0       0       0
   607 ;;Total ram usage:        1 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text5
   617  0007A4                     __ptext5:
   618                           	callstack 0
   619  0007A4                     _UART_Config_TXSTA:
   620                           	callstack 30
   621                           
   622                           ;incstack = 0
   623                           ;UART_Config_TXSTA@config stored from wreg
   624  0007A4  6E01               	movwf	UART_Config_TXSTA@config^0,c
   625  0007A6                     
   626                           ;uartStructMain.c: 37:     TXSTAbits.TXEN = config.txEnable;
   627  0007A6  A001               	btfss	UART_Config_TXSTA@config^0,0,c
   628  0007A8  D002               	bra	u55
   629  0007AA  8AAC               	bsf	172,5,c	;volatile
   630  0007AC  D001               	bra	u57
   631  0007AE                     u55:
   632  0007AE  9AAC               	bcf	172,5,c	;volatile
   633  0007B0                     u57:
   634                           
   635                           ;uartStructMain.c: 38:     TXSTAbits.SYNC = config.syncMode;
   636  0007B0  A201               	btfss	UART_Config_TXSTA@config^0,1,c
   637  0007B2  D002               	bra	u65
   638  0007B4  88AC               	bsf	172,4,c	;volatile
   639  0007B6  D001               	bra	u67
   640  0007B8                     u65:
   641  0007B8  98AC               	bcf	172,4,c	;volatile
   642  0007BA                     u67:
   643                           
   644                           ;uartStructMain.c: 39:     TXSTAbits.BRGH = config.highBoadRate;
   645  0007BA  A401               	btfss	UART_Config_TXSTA@config^0,2,c
   646  0007BC  D002               	bra	u75
   647  0007BE  84AC               	bsf	172,2,c	;volatile
   648  0007C0  D001               	bra	u77
   649  0007C2                     u75:
   650  0007C2  94AC               	bcf	172,2,c	;volatile
   651  0007C4                     u77:
   652  0007C4  0012               	return		;funcret
   653  0007C6                     __end_of_UART_Config_TXSTA:
   654                           	callstack 0
   655                           
   656                           	psect	rparam
   657  0000                     
   658                           	psect	idloc
   659                           
   660                           ;Config register IDLOC0 @ 0x200000
   661                           ;	unspecified, using default values
   662  200000                     	org	2097152
   663  200000  FF                 	db	255
   664                           
   665                           ;Config register IDLOC1 @ 0x200001
   666                           ;	unspecified, using default values
   667  200001                     	org	2097153
   668  200001  FF                 	db	255
   669                           
   670                           ;Config register IDLOC2 @ 0x200002
   671                           ;	unspecified, using default values
   672  200002                     	org	2097154
   673  200002  FF                 	db	255
   674                           
   675                           ;Config register IDLOC3 @ 0x200003
   676                           ;	unspecified, using default values
   677  200003                     	org	2097155
   678  200003  FF                 	db	255
   679                           
   680                           ;Config register IDLOC4 @ 0x200004
   681                           ;	unspecified, using default values
   682  200004                     	org	2097156
   683  200004  FF                 	db	255
   684                           
   685                           ;Config register IDLOC5 @ 0x200005
   686                           ;	unspecified, using default values
   687  200005                     	org	2097157
   688  200005  FF                 	db	255
   689                           
   690                           ;Config register IDLOC6 @ 0x200006
   691                           ;	unspecified, using default values
   692  200006                     	org	2097158
   693  200006  FF                 	db	255
   694                           
   695                           ;Config register IDLOC7 @ 0x200007
   696                           ;	unspecified, using default values
   697  200007                     	org	2097159
   698  200007  FF                 	db	255
   699                           
   700                           	psect	config
   701                           
   702                           ; Padding undefined space
   703  300000                     	org	3145728
   704  300000  FF                 	db	255
   705                           
   706                           ;Config register CONFIG1H @ 0x300001
   707                           ;	unspecified, using default values
   708                           ;	Oscillator Selection bits
   709                           ;	OSC = 0x7, unprogrammed default
   710                           ;	Fail-Safe Clock Monitor Enable bit
   711                           ;	FCMEN = 0x0, unprogrammed default
   712                           ;	Internal/External Oscillator Switchover bit
   713                           ;	IESO = 0x0, unprogrammed default
   714  300001                     	org	3145729
   715  300001  07                 	db	7
   716                           
   717                           ;Config register CONFIG2L @ 0x300002
   718                           ;	unspecified, using default values
   719                           ;	Power-up Timer Enable bit
   720                           ;	PWRT = 0x1, unprogrammed default
   721                           ;	Brown-out Reset Enable bits
   722                           ;	BOREN = 0x3, unprogrammed default
   723                           ;	Brown-out Reset Voltage bits
   724                           ;	BORV = 0x3, unprogrammed default
   725  300002                     	org	3145730
   726  300002  1F                 	db	31
   727                           
   728                           ;Config register CONFIG2H @ 0x300003
   729                           ;	unspecified, using default values
   730                           ;	Watchdog Timer Enable bit
   731                           ;	WDT = 0x1, unprogrammed default
   732                           ;	Watchdog Timer Postscale Select bits
   733                           ;	WDTPS = 0xF, unprogrammed default
   734  300003                     	org	3145731
   735  300003  1F                 	db	31
   736                           
   737                           ; Padding undefined space
   738  300004                     	org	3145732
   739  300004  FF                 	db	255
   740                           
   741                           ;Config register CONFIG3H @ 0x300005
   742                           ;	unspecified, using default values
   743                           ;	PORTB A/D Enable bit
   744                           ;	PBADEN = 0x1, unprogrammed default
   745                           ;	Low-Power Timer 1 Oscillator Enable bit
   746                           ;	LPT1OSC = 0x0, unprogrammed default
   747                           ;	MCLR Pin Enable bit
   748                           ;	MCLRE = 0x1, unprogrammed default
   749  300005                     	org	3145733
   750  300005  82                 	db	130
   751                           
   752                           ;Config register CONFIG4L @ 0x300006
   753                           ;	unspecified, using default values
   754                           ;	Stack Full/Underflow Reset Enable bit
   755                           ;	STVREN = 0x1, unprogrammed default
   756                           ;	Single-Supply ICSP Enable bit
   757                           ;	LVP = 0x1, unprogrammed default
   758                           ;	Boot Block Size Select bit
   759                           ;	BBSIZ = 0x0, unprogrammed default
   760                           ;	Extended Instruction Set Enable bit
   761                           ;	XINST = 0x0, unprogrammed default
   762                           ;	Background Debugger Enable bit
   763                           ;	DEBUG = 0x1, unprogrammed default
   764  300006                     	org	3145734
   765  300006  85                 	db	133
   766                           
   767                           ; Padding undefined space
   768  300007                     	org	3145735
   769  300007  FF                 	db	255
   770                           
   771                           ;Config register CONFIG5L @ 0x300008
   772                           ;	unspecified, using default values
   773                           ;	Code Protection bit
   774                           ;	CP0 = 0x1, unprogrammed default
   775                           ;	Code Protection bit
   776                           ;	CP1 = 0x1, unprogrammed default
   777                           ;	Code Protection bit
   778                           ;	CP2 = 0x1, unprogrammed default
   779                           ;	Code Protection bit
   780                           ;	CP3 = 0x1, unprogrammed default
   781  300008                     	org	3145736
   782  300008  0F                 	db	15
   783                           
   784                           ;Config register CONFIG5H @ 0x300009
   785                           ;	unspecified, using default values
   786                           ;	Boot Block Code Protection bit
   787                           ;	CPB = 0x1, unprogrammed default
   788                           ;	Data EEPROM Code Protection bit
   789                           ;	CPD = 0x1, unprogrammed default
   790  300009                     	org	3145737
   791  300009  C0                 	db	192
   792                           
   793                           ;Config register CONFIG6L @ 0x30000A
   794                           ;	unspecified, using default values
   795                           ;	Write Protection bit
   796                           ;	WRT0 = 0x1, unprogrammed default
   797                           ;	Write Protection bit
   798                           ;	WRT1 = 0x1, unprogrammed default
   799                           ;	Write Protection bit
   800                           ;	WRT2 = 0x1, unprogrammed default
   801                           ;	Write Protection bit
   802                           ;	WRT3 = 0x1, unprogrammed default
   803  30000A                     	org	3145738
   804  30000A  0F                 	db	15
   805                           
   806                           ;Config register CONFIG6H @ 0x30000B
   807                           ;	unspecified, using default values
   808                           ;	Configuration Register Write Protection bit
   809                           ;	WRTC = 0x1, unprogrammed default
   810                           ;	Boot Block Write Protection bit
   811                           ;	WRTB = 0x1, unprogrammed default
   812                           ;	Data EEPROM Write Protection bit
   813                           ;	WRTD = 0x1, unprogrammed default
   814  30000B                     	org	3145739
   815  30000B  E0                 	db	224
   816                           
   817                           ;Config register CONFIG7L @ 0x30000C
   818                           ;	unspecified, using default values
   819                           ;	Table Read Protection bit
   820                           ;	EBTR0 = 0x1, unprogrammed default
   821                           ;	Table Read Protection bit
   822                           ;	EBTR1 = 0x1, unprogrammed default
   823                           ;	Table Read Protection bit
   824                           ;	EBTR2 = 0x1, unprogrammed default
   825                           ;	Table Read Protection bit
   826                           ;	EBTR3 = 0x1, unprogrammed default
   827  30000C                     	org	3145740
   828  30000C  0F                 	db	15
   829                           
   830                           ;Config register CONFIG7H @ 0x30000D
   831                           ;	unspecified, using default values
   832                           ;	Boot Block Table Read Protection bit
   833                           ;	EBTRB = 0x1, unprogrammed default
   834  30000D                     	org	3145741
   835  30000D  40                 	db	64
   836                           tosu	equ	0xFFF
   837                           tosh	equ	0xFFE
   838                           tosl	equ	0xFFD
   839                           stkptr	equ	0xFFC
   840                           pclatu	equ	0xFFB
   841                           pclath	equ	0xFFA
   842                           pcl	equ	0xFF9
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           prodh	equ	0xFF4
   848                           prodl	equ	0xFF3
   849                           indf0	equ	0xFEF
   850                           postinc0	equ	0xFEE
   851                           postdec0	equ	0xFED
   852                           preinc0	equ	0xFEC
   853                           plusw0	equ	0xFEB
   854                           fsr0h	equ	0xFEA
   855                           fsr0l	equ	0xFE9
   856                           wreg	equ	0xFE8
   857                           indf1	equ	0xFE7
   858                           postinc1	equ	0xFE6
   859                           postdec1	equ	0xFE5
   860                           preinc1	equ	0xFE4
   861                           plusw1	equ	0xFE3
   862                           fsr1h	equ	0xFE2
   863                           fsr1l	equ	0xFE1
   864                           bsr	equ	0xFE0
   865                           indf2	equ	0xFDF
   866                           postinc2	equ	0xFDE
   867                           postdec2	equ	0xFDD
   868                           preinc2	equ	0xFDC
   869                           plusw2	equ	0xFDB
   870                           fsr2h	equ	0xFDA
   871                           fsr2l	equ	0xFD9
   872                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_TransmitString@data	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     674
                                             21 COMRAM     7     7      0
                  _UART_Config_TXSTA
                          _UART_Init
                _UART_TransmitString
             _UART_WaitForTxComplete
 ---------------------------------------------------------------------------------
 (1) _UART_WaitForTxComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TransmitString                                  2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _UART_Config_TXSTA                                    1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Config_TXSTA
   _UART_Init
     ___lldiv
   _UART_TransmitString
   _UART_WaitForTxComplete

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1C      1C       1       29.5%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Nov 26 09:57:56 2023

                             l20 07C4                               l31 0766  
                             l23 07C6                               l17 0760  
                             l26 07D4                               l35 07A2  
                             l80 06AC                               l73 069C  
                             u55 07AE                               u80 07D4  
                             u65 07B8                               u57 07B0  
                             u81 07D0                               u75 07C2  
                             u67 07BA                               u77 07C4  
                            l801 068C                              l803 0696  
                            l811 0782                              l805 071A  
                            l813 0786                              l821 06B6  
                            l743 07A6                              l807 0762  
                            l831 06CE                              l823 06B8  
                            l815 06AE                              l809 0774  
                            l745 07C6                              l841 06FA  
                            l833 06D2                              l825 06BE  
                            l817 06B2                              l835 06E6  
                            l827 06C2                              l819 06B4  
                            l837 06EA                              l829 06CA  
                            l791 0644                              l783 060A  
                            l839 06EE                              l793 0652  
                            l785 061A                              l795 065C  
                            l787 0630                              l797 067A  
                            l789 0638                              l799 068A  
                            u110 0630                              u111 062C  
                            u120 0652                              u121 064E  
                            u130 067A                              u131 0676  
                            u150 0774                              u151 0770  
                            u160 07A2                              u145 0738  
                            u161 079E                              u177 0704  
                            wreg 000FE8                             STR_1 0601  
                           _main 06AE                             start 0000  
                   ___param_bank 000000          ?_UART_WaitForTxComplete 0001  
                          ?_main 0001                _UART_Config_TXSTA 07A4  
                __end_of___lldiv 06AE                            _RCSTA 000FAB  
                          _SPBRG 000FAF                            _TRISC 000F94  
                          _TXREG 000FAD               ?_UART_Config_TXSTA 0001  
             __size_of_UART_Init 0048                     main@txConfig 0018  
            ??_UART_Config_TXSTA 0001                            tablat 000FF5  
                          status 000FD8   __end_of_UART_WaitForTxComplete 07D6  
                __initialization 07D6                     __end_of_main 071A  
    __end_of_UART_TransmitString 07A4        __end_of_UART_Config_TXSTA 07C6  
                         ??_main 0016                    __activetblptr 000001  
              __end_of_UART_Init 0762                        ??___lldiv 0009  
                         isa$std 000001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                       __accesstop 0060  
        __end_of__initialization 07D6                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001       __size_of_UART_Config_TXSTA 0022  
                        __Hparam 0000                          __Lparam 0000  
                        ___lldiv 060A                     __psmallconst 0600  
                        __pcinit 07D6                          __ramtop 0600  
                        __ptext0 06AE                          __ptext1 07C6  
                        __ptext2 0762                          __ptext3 071A  
                        __ptext4 060A                          __ptext5 07A4  
                 main@uartConfig 0019             end_of_initialization 07D6  
                ___lldiv@divisor 0005                  ___lldiv@counter 000D  
                      _UART_Init 071A     __size_of_UART_TransmitString 0042  
                      _TXSTAbits 000FAC                       ?_UART_Init 000E  
            start_initialization 07D6         ??_UART_WaitForTxComplete 0001  
                       ?___lldiv 0001                      ??_UART_Init 0012  
                UART_Init@config 000E                      __smallconst 0600  
__size_of_UART_WaitForTxComplete 0010              _UART_TransmitString 0762  
                       _PIR1bits 000F9E          UART_Config_TXSTA@config 0001  
           ?_UART_TransmitString 0001                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0600  
               __size_of___lldiv 00A4           _UART_WaitForTxComplete 07C6  
          ??_UART_TransmitString 0003                    __size_of_main 006C  
                       isa$xinst 000000          UART_TransmitString@data 0001  
               ___lldiv@dividend 0001                 ___lldiv@quotient 0009  
